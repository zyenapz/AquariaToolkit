//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AquariaToolkit.AquariaWebReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Aquaria SOAP ServiceBinding", Namespace="urn:aquariasoap")]
    public partial class AquariaSOAPService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback get_angelfish_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_bettafish_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_danio_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_commongoldfish_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_fancygoldfish_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_gourami_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_guppy_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_molly_idOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_fcm_notcompatible_numberOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_fcm_usuallycompatible_numberOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_fcm_verycompatible_numberOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_halfcylinder_nameOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_quartercylinder_nameOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_massOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_rectangle_volumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_bowfront_volumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_triangleprism_volumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_cornerpentagon_volumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_cylinder_volumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculate_electricity_costOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculate_monthlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback calculate_annualOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_meralco_rateOperationCompleted;
        
        private System.Threading.SendOrPostCallback compare_fish_compatibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback celsius_to_kelvinOperationCompleted;
        
        private System.Threading.SendOrPostCallback kelvin_to_celsiusOperationCompleted;
        
        private System.Threading.SendOrPostCallback fahrenheit_to_celsiusOperationCompleted;
        
        private System.Threading.SendOrPostCallback celsius_to_fahrenheitOperationCompleted;
        
        private System.Threading.SendOrPostCallback fahrenheit_to_kelvinOperationCompleted;
        
        private System.Threading.SendOrPostCallback kelvin_to_fahrenheitOperationCompleted;
        
        private System.Threading.SendOrPostCallback cm3_to_literOperationCompleted;
        
        private System.Threading.SendOrPostCallback liter_to_cm3OperationCompleted;
        
        private System.Threading.SendOrPostCallback liter_to_gallonUSOperationCompleted;
        
        private System.Threading.SendOrPostCallback gallonUS_to_literOperationCompleted;
        
        private System.Threading.SendOrPostCallback meter_to_centimeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback centimeter_to_meterOperationCompleted;
        
        private System.Threading.SendOrPostCallback foot_to_inchOperationCompleted;
        
        private System.Threading.SendOrPostCallback inch_to_footOperationCompleted;
        
        private System.Threading.SendOrPostCallback meter_to_footOperationCompleted;
        
        private System.Threading.SendOrPostCallback foot_to_meterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AquariaSOAPService() {
            this.Url = "http://192.168.1.20/aquariasoap/service.php";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event get_angelfish_idCompletedEventHandler get_angelfish_idCompleted;
        
        /// <remarks/>
        public event get_bettafish_idCompletedEventHandler get_bettafish_idCompleted;
        
        /// <remarks/>
        public event get_danio_idCompletedEventHandler get_danio_idCompleted;
        
        /// <remarks/>
        public event get_commongoldfish_idCompletedEventHandler get_commongoldfish_idCompleted;
        
        /// <remarks/>
        public event get_fancygoldfish_idCompletedEventHandler get_fancygoldfish_idCompleted;
        
        /// <remarks/>
        public event get_gourami_idCompletedEventHandler get_gourami_idCompleted;
        
        /// <remarks/>
        public event get_guppy_idCompletedEventHandler get_guppy_idCompleted;
        
        /// <remarks/>
        public event get_molly_idCompletedEventHandler get_molly_idCompleted;
        
        /// <remarks/>
        public event get_fcm_notcompatible_numberCompletedEventHandler get_fcm_notcompatible_numberCompleted;
        
        /// <remarks/>
        public event get_fcm_usuallycompatible_numberCompletedEventHandler get_fcm_usuallycompatible_numberCompleted;
        
        /// <remarks/>
        public event get_fcm_verycompatible_numberCompletedEventHandler get_fcm_verycompatible_numberCompleted;
        
        /// <remarks/>
        public event get_halfcylinder_nameCompletedEventHandler get_halfcylinder_nameCompleted;
        
        /// <remarks/>
        public event get_quartercylinder_nameCompletedEventHandler get_quartercylinder_nameCompleted;
        
        /// <remarks/>
        public event get_massCompletedEventHandler get_massCompleted;
        
        /// <remarks/>
        public event get_rectangle_volumeCompletedEventHandler get_rectangle_volumeCompleted;
        
        /// <remarks/>
        public event get_bowfront_volumeCompletedEventHandler get_bowfront_volumeCompleted;
        
        /// <remarks/>
        public event get_triangleprism_volumeCompletedEventHandler get_triangleprism_volumeCompleted;
        
        /// <remarks/>
        public event get_cornerpentagon_volumeCompletedEventHandler get_cornerpentagon_volumeCompleted;
        
        /// <remarks/>
        public event get_cylinder_volumeCompletedEventHandler get_cylinder_volumeCompleted;
        
        /// <remarks/>
        public event calculate_electricity_costCompletedEventHandler calculate_electricity_costCompleted;
        
        /// <remarks/>
        public event calculate_monthlyCompletedEventHandler calculate_monthlyCompleted;
        
        /// <remarks/>
        public event calculate_annualCompletedEventHandler calculate_annualCompleted;
        
        /// <remarks/>
        public event get_meralco_rateCompletedEventHandler get_meralco_rateCompleted;
        
        /// <remarks/>
        public event compare_fish_compatibilityCompletedEventHandler compare_fish_compatibilityCompleted;
        
        /// <remarks/>
        public event celsius_to_kelvinCompletedEventHandler celsius_to_kelvinCompleted;
        
        /// <remarks/>
        public event kelvin_to_celsiusCompletedEventHandler kelvin_to_celsiusCompleted;
        
        /// <remarks/>
        public event fahrenheit_to_celsiusCompletedEventHandler fahrenheit_to_celsiusCompleted;
        
        /// <remarks/>
        public event celsius_to_fahrenheitCompletedEventHandler celsius_to_fahrenheitCompleted;
        
        /// <remarks/>
        public event fahrenheit_to_kelvinCompletedEventHandler fahrenheit_to_kelvinCompleted;
        
        /// <remarks/>
        public event kelvin_to_fahrenheitCompletedEventHandler kelvin_to_fahrenheitCompleted;
        
        /// <remarks/>
        public event cm3_to_literCompletedEventHandler cm3_to_literCompleted;
        
        /// <remarks/>
        public event liter_to_cm3CompletedEventHandler liter_to_cm3Completed;
        
        /// <remarks/>
        public event liter_to_gallonUSCompletedEventHandler liter_to_gallonUSCompleted;
        
        /// <remarks/>
        public event gallonUS_to_literCompletedEventHandler gallonUS_to_literCompleted;
        
        /// <remarks/>
        public event meter_to_centimeterCompletedEventHandler meter_to_centimeterCompleted;
        
        /// <remarks/>
        public event centimeter_to_meterCompletedEventHandler centimeter_to_meterCompleted;
        
        /// <remarks/>
        public event foot_to_inchCompletedEventHandler foot_to_inchCompleted;
        
        /// <remarks/>
        public event inch_to_footCompletedEventHandler inch_to_footCompleted;
        
        /// <remarks/>
        public event meter_to_footCompletedEventHandler meter_to_footCompleted;
        
        /// <remarks/>
        public event foot_to_meterCompletedEventHandler foot_to_meterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_angelfish_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_angelfish_id() {
            object[] results = this.Invoke("get_angelfish_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_angelfish_idAsync() {
            this.get_angelfish_idAsync(null);
        }
        
        /// <remarks/>
        public void get_angelfish_idAsync(object userState) {
            if ((this.get_angelfish_idOperationCompleted == null)) {
                this.get_angelfish_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_angelfish_idOperationCompleted);
            }
            this.InvokeAsync("get_angelfish_id", new object[0], this.get_angelfish_idOperationCompleted, userState);
        }
        
        private void Onget_angelfish_idOperationCompleted(object arg) {
            if ((this.get_angelfish_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_angelfish_idCompleted(this, new get_angelfish_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_bettafish_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_bettafish_id() {
            object[] results = this.Invoke("get_bettafish_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_bettafish_idAsync() {
            this.get_bettafish_idAsync(null);
        }
        
        /// <remarks/>
        public void get_bettafish_idAsync(object userState) {
            if ((this.get_bettafish_idOperationCompleted == null)) {
                this.get_bettafish_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_bettafish_idOperationCompleted);
            }
            this.InvokeAsync("get_bettafish_id", new object[0], this.get_bettafish_idOperationCompleted, userState);
        }
        
        private void Onget_bettafish_idOperationCompleted(object arg) {
            if ((this.get_bettafish_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_bettafish_idCompleted(this, new get_bettafish_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_danio_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_danio_id() {
            object[] results = this.Invoke("get_danio_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_danio_idAsync() {
            this.get_danio_idAsync(null);
        }
        
        /// <remarks/>
        public void get_danio_idAsync(object userState) {
            if ((this.get_danio_idOperationCompleted == null)) {
                this.get_danio_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_danio_idOperationCompleted);
            }
            this.InvokeAsync("get_danio_id", new object[0], this.get_danio_idOperationCompleted, userState);
        }
        
        private void Onget_danio_idOperationCompleted(object arg) {
            if ((this.get_danio_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_danio_idCompleted(this, new get_danio_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_commongoldfish_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_commongoldfish_id() {
            object[] results = this.Invoke("get_commongoldfish_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_commongoldfish_idAsync() {
            this.get_commongoldfish_idAsync(null);
        }
        
        /// <remarks/>
        public void get_commongoldfish_idAsync(object userState) {
            if ((this.get_commongoldfish_idOperationCompleted == null)) {
                this.get_commongoldfish_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_commongoldfish_idOperationCompleted);
            }
            this.InvokeAsync("get_commongoldfish_id", new object[0], this.get_commongoldfish_idOperationCompleted, userState);
        }
        
        private void Onget_commongoldfish_idOperationCompleted(object arg) {
            if ((this.get_commongoldfish_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_commongoldfish_idCompleted(this, new get_commongoldfish_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_fancygoldfish_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_fancygoldfish_id() {
            object[] results = this.Invoke("get_fancygoldfish_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_fancygoldfish_idAsync() {
            this.get_fancygoldfish_idAsync(null);
        }
        
        /// <remarks/>
        public void get_fancygoldfish_idAsync(object userState) {
            if ((this.get_fancygoldfish_idOperationCompleted == null)) {
                this.get_fancygoldfish_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_fancygoldfish_idOperationCompleted);
            }
            this.InvokeAsync("get_fancygoldfish_id", new object[0], this.get_fancygoldfish_idOperationCompleted, userState);
        }
        
        private void Onget_fancygoldfish_idOperationCompleted(object arg) {
            if ((this.get_fancygoldfish_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_fancygoldfish_idCompleted(this, new get_fancygoldfish_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_gourami_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_gourami_id() {
            object[] results = this.Invoke("get_gourami_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_gourami_idAsync() {
            this.get_gourami_idAsync(null);
        }
        
        /// <remarks/>
        public void get_gourami_idAsync(object userState) {
            if ((this.get_gourami_idOperationCompleted == null)) {
                this.get_gourami_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_gourami_idOperationCompleted);
            }
            this.InvokeAsync("get_gourami_id", new object[0], this.get_gourami_idOperationCompleted, userState);
        }
        
        private void Onget_gourami_idOperationCompleted(object arg) {
            if ((this.get_gourami_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_gourami_idCompleted(this, new get_gourami_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_guppy_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_guppy_id() {
            object[] results = this.Invoke("get_guppy_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_guppy_idAsync() {
            this.get_guppy_idAsync(null);
        }
        
        /// <remarks/>
        public void get_guppy_idAsync(object userState) {
            if ((this.get_guppy_idOperationCompleted == null)) {
                this.get_guppy_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_guppy_idOperationCompleted);
            }
            this.InvokeAsync("get_guppy_id", new object[0], this.get_guppy_idOperationCompleted, userState);
        }
        
        private void Onget_guppy_idOperationCompleted(object arg) {
            if ((this.get_guppy_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_guppy_idCompleted(this, new get_guppy_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_molly_id", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_molly_id() {
            object[] results = this.Invoke("get_molly_id", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_molly_idAsync() {
            this.get_molly_idAsync(null);
        }
        
        /// <remarks/>
        public void get_molly_idAsync(object userState) {
            if ((this.get_molly_idOperationCompleted == null)) {
                this.get_molly_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_molly_idOperationCompleted);
            }
            this.InvokeAsync("get_molly_id", new object[0], this.get_molly_idOperationCompleted, userState);
        }
        
        private void Onget_molly_idOperationCompleted(object arg) {
            if ((this.get_molly_idCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_molly_idCompleted(this, new get_molly_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_fcm_notcompatible_number", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_fcm_notcompatible_number() {
            object[] results = this.Invoke("get_fcm_notcompatible_number", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_fcm_notcompatible_numberAsync() {
            this.get_fcm_notcompatible_numberAsync(null);
        }
        
        /// <remarks/>
        public void get_fcm_notcompatible_numberAsync(object userState) {
            if ((this.get_fcm_notcompatible_numberOperationCompleted == null)) {
                this.get_fcm_notcompatible_numberOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_fcm_notcompatible_numberOperationCompleted);
            }
            this.InvokeAsync("get_fcm_notcompatible_number", new object[0], this.get_fcm_notcompatible_numberOperationCompleted, userState);
        }
        
        private void Onget_fcm_notcompatible_numberOperationCompleted(object arg) {
            if ((this.get_fcm_notcompatible_numberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_fcm_notcompatible_numberCompleted(this, new get_fcm_notcompatible_numberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_fcm_usuallycompatible_number", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_fcm_usuallycompatible_number() {
            object[] results = this.Invoke("get_fcm_usuallycompatible_number", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_fcm_usuallycompatible_numberAsync() {
            this.get_fcm_usuallycompatible_numberAsync(null);
        }
        
        /// <remarks/>
        public void get_fcm_usuallycompatible_numberAsync(object userState) {
            if ((this.get_fcm_usuallycompatible_numberOperationCompleted == null)) {
                this.get_fcm_usuallycompatible_numberOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_fcm_usuallycompatible_numberOperationCompleted);
            }
            this.InvokeAsync("get_fcm_usuallycompatible_number", new object[0], this.get_fcm_usuallycompatible_numberOperationCompleted, userState);
        }
        
        private void Onget_fcm_usuallycompatible_numberOperationCompleted(object arg) {
            if ((this.get_fcm_usuallycompatible_numberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_fcm_usuallycompatible_numberCompleted(this, new get_fcm_usuallycompatible_numberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_fcm_verycompatible_number", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int get_fcm_verycompatible_number() {
            object[] results = this.Invoke("get_fcm_verycompatible_number", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void get_fcm_verycompatible_numberAsync() {
            this.get_fcm_verycompatible_numberAsync(null);
        }
        
        /// <remarks/>
        public void get_fcm_verycompatible_numberAsync(object userState) {
            if ((this.get_fcm_verycompatible_numberOperationCompleted == null)) {
                this.get_fcm_verycompatible_numberOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_fcm_verycompatible_numberOperationCompleted);
            }
            this.InvokeAsync("get_fcm_verycompatible_number", new object[0], this.get_fcm_verycompatible_numberOperationCompleted, userState);
        }
        
        private void Onget_fcm_verycompatible_numberOperationCompleted(object arg) {
            if ((this.get_fcm_verycompatible_numberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_fcm_verycompatible_numberCompleted(this, new get_fcm_verycompatible_numberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_halfcylinder_name", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string get_halfcylinder_name() {
            object[] results = this.Invoke("get_halfcylinder_name", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_halfcylinder_nameAsync() {
            this.get_halfcylinder_nameAsync(null);
        }
        
        /// <remarks/>
        public void get_halfcylinder_nameAsync(object userState) {
            if ((this.get_halfcylinder_nameOperationCompleted == null)) {
                this.get_halfcylinder_nameOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_halfcylinder_nameOperationCompleted);
            }
            this.InvokeAsync("get_halfcylinder_name", new object[0], this.get_halfcylinder_nameOperationCompleted, userState);
        }
        
        private void Onget_halfcylinder_nameOperationCompleted(object arg) {
            if ((this.get_halfcylinder_nameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_halfcylinder_nameCompleted(this, new get_halfcylinder_nameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_quartercylinder_name", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string get_quartercylinder_name() {
            object[] results = this.Invoke("get_quartercylinder_name", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_quartercylinder_nameAsync() {
            this.get_quartercylinder_nameAsync(null);
        }
        
        /// <remarks/>
        public void get_quartercylinder_nameAsync(object userState) {
            if ((this.get_quartercylinder_nameOperationCompleted == null)) {
                this.get_quartercylinder_nameOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_quartercylinder_nameOperationCompleted);
            }
            this.InvokeAsync("get_quartercylinder_name", new object[0], this.get_quartercylinder_nameOperationCompleted, userState);
        }
        
        private void Onget_quartercylinder_nameOperationCompleted(object arg) {
            if ((this.get_quartercylinder_nameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_quartercylinder_nameCompleted(this, new get_quartercylinder_nameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_mass", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_mass(double volume) {
            object[] results = this.Invoke("get_mass", new object[] {
                        volume});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_massAsync(double volume) {
            this.get_massAsync(volume, null);
        }
        
        /// <remarks/>
        public void get_massAsync(double volume, object userState) {
            if ((this.get_massOperationCompleted == null)) {
                this.get_massOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_massOperationCompleted);
            }
            this.InvokeAsync("get_mass", new object[] {
                        volume}, this.get_massOperationCompleted, userState);
        }
        
        private void Onget_massOperationCompleted(object arg) {
            if ((this.get_massCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_massCompleted(this, new get_massCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_rectangle_volume", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_rectangle_volume(double length, double width, double height) {
            object[] results = this.Invoke("get_rectangle_volume", new object[] {
                        length,
                        width,
                        height});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_rectangle_volumeAsync(double length, double width, double height) {
            this.get_rectangle_volumeAsync(length, width, height, null);
        }
        
        /// <remarks/>
        public void get_rectangle_volumeAsync(double length, double width, double height, object userState) {
            if ((this.get_rectangle_volumeOperationCompleted == null)) {
                this.get_rectangle_volumeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_rectangle_volumeOperationCompleted);
            }
            this.InvokeAsync("get_rectangle_volume", new object[] {
                        length,
                        width,
                        height}, this.get_rectangle_volumeOperationCompleted, userState);
        }
        
        private void Onget_rectangle_volumeOperationCompleted(object arg) {
            if ((this.get_rectangle_volumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_rectangle_volumeCompleted(this, new get_rectangle_volumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_bowfront_volume", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_bowfront_volume(double length, double width, double full_width, double height) {
            object[] results = this.Invoke("get_bowfront_volume", new object[] {
                        length,
                        width,
                        full_width,
                        height});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_bowfront_volumeAsync(double length, double width, double full_width, double height) {
            this.get_bowfront_volumeAsync(length, width, full_width, height, null);
        }
        
        /// <remarks/>
        public void get_bowfront_volumeAsync(double length, double width, double full_width, double height, object userState) {
            if ((this.get_bowfront_volumeOperationCompleted == null)) {
                this.get_bowfront_volumeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_bowfront_volumeOperationCompleted);
            }
            this.InvokeAsync("get_bowfront_volume", new object[] {
                        length,
                        width,
                        full_width,
                        height}, this.get_bowfront_volumeOperationCompleted, userState);
        }
        
        private void Onget_bowfront_volumeOperationCompleted(object arg) {
            if ((this.get_bowfront_volumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_bowfront_volumeCompleted(this, new get_bowfront_volumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_triangleprism_volume", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_triangleprism_volume(double @base, double length, double height) {
            object[] results = this.Invoke("get_triangleprism_volume", new object[] {
                        @base,
                        length,
                        height});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_triangleprism_volumeAsync(double @base, double length, double height) {
            this.get_triangleprism_volumeAsync(@base, length, height, null);
        }
        
        /// <remarks/>
        public void get_triangleprism_volumeAsync(double @base, double length, double height, object userState) {
            if ((this.get_triangleprism_volumeOperationCompleted == null)) {
                this.get_triangleprism_volumeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_triangleprism_volumeOperationCompleted);
            }
            this.InvokeAsync("get_triangleprism_volume", new object[] {
                        @base,
                        length,
                        height}, this.get_triangleprism_volumeOperationCompleted, userState);
        }
        
        private void Onget_triangleprism_volumeOperationCompleted(object arg) {
            if ((this.get_triangleprism_volumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_triangleprism_volumeCompleted(this, new get_triangleprism_volumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_cornerpentagon_volume", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_cornerpentagon_volume(double long_side, double short_side, double height) {
            object[] results = this.Invoke("get_cornerpentagon_volume", new object[] {
                        long_side,
                        short_side,
                        height});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_cornerpentagon_volumeAsync(double long_side, double short_side, double height) {
            this.get_cornerpentagon_volumeAsync(long_side, short_side, height, null);
        }
        
        /// <remarks/>
        public void get_cornerpentagon_volumeAsync(double long_side, double short_side, double height, object userState) {
            if ((this.get_cornerpentagon_volumeOperationCompleted == null)) {
                this.get_cornerpentagon_volumeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_cornerpentagon_volumeOperationCompleted);
            }
            this.InvokeAsync("get_cornerpentagon_volume", new object[] {
                        long_side,
                        short_side,
                        height}, this.get_cornerpentagon_volumeOperationCompleted, userState);
        }
        
        private void Onget_cornerpentagon_volumeOperationCompleted(object arg) {
            if ((this.get_cornerpentagon_volumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_cornerpentagon_volumeCompleted(this, new get_cornerpentagon_volumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_cylinder_volume", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_cylinder_volume(double diameter, double height, string portion_s) {
            object[] results = this.Invoke("get_cylinder_volume", new object[] {
                        diameter,
                        height,
                        portion_s});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_cylinder_volumeAsync(double diameter, double height, string portion_s) {
            this.get_cylinder_volumeAsync(diameter, height, portion_s, null);
        }
        
        /// <remarks/>
        public void get_cylinder_volumeAsync(double diameter, double height, string portion_s, object userState) {
            if ((this.get_cylinder_volumeOperationCompleted == null)) {
                this.get_cylinder_volumeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_cylinder_volumeOperationCompleted);
            }
            this.InvokeAsync("get_cylinder_volume", new object[] {
                        diameter,
                        height,
                        portion_s}, this.get_cylinder_volumeOperationCompleted, userState);
        }
        
        private void Onget_cylinder_volumeOperationCompleted(object arg) {
            if ((this.get_cylinder_volumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_cylinder_volumeCompleted(this, new get_cylinder_volumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/calculate_electricity_cost", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double calculate_electricity_cost(double watts) {
            object[] results = this.Invoke("calculate_electricity_cost", new object[] {
                        watts});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void calculate_electricity_costAsync(double watts) {
            this.calculate_electricity_costAsync(watts, null);
        }
        
        /// <remarks/>
        public void calculate_electricity_costAsync(double watts, object userState) {
            if ((this.calculate_electricity_costOperationCompleted == null)) {
                this.calculate_electricity_costOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncalculate_electricity_costOperationCompleted);
            }
            this.InvokeAsync("calculate_electricity_cost", new object[] {
                        watts}, this.calculate_electricity_costOperationCompleted, userState);
        }
        
        private void Oncalculate_electricity_costOperationCompleted(object arg) {
            if ((this.calculate_electricity_costCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculate_electricity_costCompleted(this, new calculate_electricity_costCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/calculate_monthly", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double calculate_monthly(double cost) {
            object[] results = this.Invoke("calculate_monthly", new object[] {
                        cost});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void calculate_monthlyAsync(double cost) {
            this.calculate_monthlyAsync(cost, null);
        }
        
        /// <remarks/>
        public void calculate_monthlyAsync(double cost, object userState) {
            if ((this.calculate_monthlyOperationCompleted == null)) {
                this.calculate_monthlyOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncalculate_monthlyOperationCompleted);
            }
            this.InvokeAsync("calculate_monthly", new object[] {
                        cost}, this.calculate_monthlyOperationCompleted, userState);
        }
        
        private void Oncalculate_monthlyOperationCompleted(object arg) {
            if ((this.calculate_monthlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculate_monthlyCompleted(this, new calculate_monthlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/calculate_annual", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double calculate_annual(double monthly_cost) {
            object[] results = this.Invoke("calculate_annual", new object[] {
                        monthly_cost});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void calculate_annualAsync(double monthly_cost) {
            this.calculate_annualAsync(monthly_cost, null);
        }
        
        /// <remarks/>
        public void calculate_annualAsync(double monthly_cost, object userState) {
            if ((this.calculate_annualOperationCompleted == null)) {
                this.calculate_annualOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncalculate_annualOperationCompleted);
            }
            this.InvokeAsync("calculate_annual", new object[] {
                        monthly_cost}, this.calculate_annualOperationCompleted, userState);
        }
        
        private void Oncalculate_annualOperationCompleted(object arg) {
            if ((this.calculate_annualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calculate_annualCompleted(this, new calculate_annualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/get_meralco_rate", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double get_meralco_rate() {
            object[] results = this.Invoke("get_meralco_rate", new object[0]);
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void get_meralco_rateAsync() {
            this.get_meralco_rateAsync(null);
        }
        
        /// <remarks/>
        public void get_meralco_rateAsync(object userState) {
            if ((this.get_meralco_rateOperationCompleted == null)) {
                this.get_meralco_rateOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_meralco_rateOperationCompleted);
            }
            this.InvokeAsync("get_meralco_rate", new object[0], this.get_meralco_rateOperationCompleted, userState);
        }
        
        private void Onget_meralco_rateOperationCompleted(object arg) {
            if ((this.get_meralco_rateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_meralco_rateCompleted(this, new get_meralco_rateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/compare_fish_compatibility", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int compare_fish_compatibility(int fish1_id, int fish2_id) {
            object[] results = this.Invoke("compare_fish_compatibility", new object[] {
                        fish1_id,
                        fish2_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void compare_fish_compatibilityAsync(int fish1_id, int fish2_id) {
            this.compare_fish_compatibilityAsync(fish1_id, fish2_id, null);
        }
        
        /// <remarks/>
        public void compare_fish_compatibilityAsync(int fish1_id, int fish2_id, object userState) {
            if ((this.compare_fish_compatibilityOperationCompleted == null)) {
                this.compare_fish_compatibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncompare_fish_compatibilityOperationCompleted);
            }
            this.InvokeAsync("compare_fish_compatibility", new object[] {
                        fish1_id,
                        fish2_id}, this.compare_fish_compatibilityOperationCompleted, userState);
        }
        
        private void Oncompare_fish_compatibilityOperationCompleted(object arg) {
            if ((this.compare_fish_compatibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.compare_fish_compatibilityCompleted(this, new compare_fish_compatibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/celsius_to_kelvin", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double celsius_to_kelvin(double celsius) {
            object[] results = this.Invoke("celsius_to_kelvin", new object[] {
                        celsius});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void celsius_to_kelvinAsync(double celsius) {
            this.celsius_to_kelvinAsync(celsius, null);
        }
        
        /// <remarks/>
        public void celsius_to_kelvinAsync(double celsius, object userState) {
            if ((this.celsius_to_kelvinOperationCompleted == null)) {
                this.celsius_to_kelvinOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncelsius_to_kelvinOperationCompleted);
            }
            this.InvokeAsync("celsius_to_kelvin", new object[] {
                        celsius}, this.celsius_to_kelvinOperationCompleted, userState);
        }
        
        private void Oncelsius_to_kelvinOperationCompleted(object arg) {
            if ((this.celsius_to_kelvinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.celsius_to_kelvinCompleted(this, new celsius_to_kelvinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/kelvin_to_celsius", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double kelvin_to_celsius(double kelvin) {
            object[] results = this.Invoke("kelvin_to_celsius", new object[] {
                        kelvin});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void kelvin_to_celsiusAsync(double kelvin) {
            this.kelvin_to_celsiusAsync(kelvin, null);
        }
        
        /// <remarks/>
        public void kelvin_to_celsiusAsync(double kelvin, object userState) {
            if ((this.kelvin_to_celsiusOperationCompleted == null)) {
                this.kelvin_to_celsiusOperationCompleted = new System.Threading.SendOrPostCallback(this.Onkelvin_to_celsiusOperationCompleted);
            }
            this.InvokeAsync("kelvin_to_celsius", new object[] {
                        kelvin}, this.kelvin_to_celsiusOperationCompleted, userState);
        }
        
        private void Onkelvin_to_celsiusOperationCompleted(object arg) {
            if ((this.kelvin_to_celsiusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.kelvin_to_celsiusCompleted(this, new kelvin_to_celsiusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/fahrenheit_to_celsius", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double fahrenheit_to_celsius(double fahrenheit) {
            object[] results = this.Invoke("fahrenheit_to_celsius", new object[] {
                        fahrenheit});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void fahrenheit_to_celsiusAsync(double fahrenheit) {
            this.fahrenheit_to_celsiusAsync(fahrenheit, null);
        }
        
        /// <remarks/>
        public void fahrenheit_to_celsiusAsync(double fahrenheit, object userState) {
            if ((this.fahrenheit_to_celsiusOperationCompleted == null)) {
                this.fahrenheit_to_celsiusOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfahrenheit_to_celsiusOperationCompleted);
            }
            this.InvokeAsync("fahrenheit_to_celsius", new object[] {
                        fahrenheit}, this.fahrenheit_to_celsiusOperationCompleted, userState);
        }
        
        private void Onfahrenheit_to_celsiusOperationCompleted(object arg) {
            if ((this.fahrenheit_to_celsiusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fahrenheit_to_celsiusCompleted(this, new fahrenheit_to_celsiusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/celsius_to_fahrenheit", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double celsius_to_fahrenheit(double celsius) {
            object[] results = this.Invoke("celsius_to_fahrenheit", new object[] {
                        celsius});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void celsius_to_fahrenheitAsync(double celsius) {
            this.celsius_to_fahrenheitAsync(celsius, null);
        }
        
        /// <remarks/>
        public void celsius_to_fahrenheitAsync(double celsius, object userState) {
            if ((this.celsius_to_fahrenheitOperationCompleted == null)) {
                this.celsius_to_fahrenheitOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncelsius_to_fahrenheitOperationCompleted);
            }
            this.InvokeAsync("celsius_to_fahrenheit", new object[] {
                        celsius}, this.celsius_to_fahrenheitOperationCompleted, userState);
        }
        
        private void Oncelsius_to_fahrenheitOperationCompleted(object arg) {
            if ((this.celsius_to_fahrenheitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.celsius_to_fahrenheitCompleted(this, new celsius_to_fahrenheitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/fahrenheit_to_kelvin", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double fahrenheit_to_kelvin(double fahrenheit) {
            object[] results = this.Invoke("fahrenheit_to_kelvin", new object[] {
                        fahrenheit});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void fahrenheit_to_kelvinAsync(double fahrenheit) {
            this.fahrenheit_to_kelvinAsync(fahrenheit, null);
        }
        
        /// <remarks/>
        public void fahrenheit_to_kelvinAsync(double fahrenheit, object userState) {
            if ((this.fahrenheit_to_kelvinOperationCompleted == null)) {
                this.fahrenheit_to_kelvinOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfahrenheit_to_kelvinOperationCompleted);
            }
            this.InvokeAsync("fahrenheit_to_kelvin", new object[] {
                        fahrenheit}, this.fahrenheit_to_kelvinOperationCompleted, userState);
        }
        
        private void Onfahrenheit_to_kelvinOperationCompleted(object arg) {
            if ((this.fahrenheit_to_kelvinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fahrenheit_to_kelvinCompleted(this, new fahrenheit_to_kelvinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/kelvin_to_fahrenheit", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double kelvin_to_fahrenheit(double kelvin) {
            object[] results = this.Invoke("kelvin_to_fahrenheit", new object[] {
                        kelvin});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void kelvin_to_fahrenheitAsync(double kelvin) {
            this.kelvin_to_fahrenheitAsync(kelvin, null);
        }
        
        /// <remarks/>
        public void kelvin_to_fahrenheitAsync(double kelvin, object userState) {
            if ((this.kelvin_to_fahrenheitOperationCompleted == null)) {
                this.kelvin_to_fahrenheitOperationCompleted = new System.Threading.SendOrPostCallback(this.Onkelvin_to_fahrenheitOperationCompleted);
            }
            this.InvokeAsync("kelvin_to_fahrenheit", new object[] {
                        kelvin}, this.kelvin_to_fahrenheitOperationCompleted, userState);
        }
        
        private void Onkelvin_to_fahrenheitOperationCompleted(object arg) {
            if ((this.kelvin_to_fahrenheitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.kelvin_to_fahrenheitCompleted(this, new kelvin_to_fahrenheitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/cm3_to_liter", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double cm3_to_liter(double cm3) {
            object[] results = this.Invoke("cm3_to_liter", new object[] {
                        cm3});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void cm3_to_literAsync(double cm3) {
            this.cm3_to_literAsync(cm3, null);
        }
        
        /// <remarks/>
        public void cm3_to_literAsync(double cm3, object userState) {
            if ((this.cm3_to_literOperationCompleted == null)) {
                this.cm3_to_literOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncm3_to_literOperationCompleted);
            }
            this.InvokeAsync("cm3_to_liter", new object[] {
                        cm3}, this.cm3_to_literOperationCompleted, userState);
        }
        
        private void Oncm3_to_literOperationCompleted(object arg) {
            if ((this.cm3_to_literCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cm3_to_literCompleted(this, new cm3_to_literCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/liter_to_cm3", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double liter_to_cm3(double liter) {
            object[] results = this.Invoke("liter_to_cm3", new object[] {
                        liter});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void liter_to_cm3Async(double liter) {
            this.liter_to_cm3Async(liter, null);
        }
        
        /// <remarks/>
        public void liter_to_cm3Async(double liter, object userState) {
            if ((this.liter_to_cm3OperationCompleted == null)) {
                this.liter_to_cm3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onliter_to_cm3OperationCompleted);
            }
            this.InvokeAsync("liter_to_cm3", new object[] {
                        liter}, this.liter_to_cm3OperationCompleted, userState);
        }
        
        private void Onliter_to_cm3OperationCompleted(object arg) {
            if ((this.liter_to_cm3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.liter_to_cm3Completed(this, new liter_to_cm3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/liter_to_gallonUS", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double liter_to_gallonUS(double liter) {
            object[] results = this.Invoke("liter_to_gallonUS", new object[] {
                        liter});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void liter_to_gallonUSAsync(double liter) {
            this.liter_to_gallonUSAsync(liter, null);
        }
        
        /// <remarks/>
        public void liter_to_gallonUSAsync(double liter, object userState) {
            if ((this.liter_to_gallonUSOperationCompleted == null)) {
                this.liter_to_gallonUSOperationCompleted = new System.Threading.SendOrPostCallback(this.Onliter_to_gallonUSOperationCompleted);
            }
            this.InvokeAsync("liter_to_gallonUS", new object[] {
                        liter}, this.liter_to_gallonUSOperationCompleted, userState);
        }
        
        private void Onliter_to_gallonUSOperationCompleted(object arg) {
            if ((this.liter_to_gallonUSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.liter_to_gallonUSCompleted(this, new liter_to_gallonUSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/gallonUS_to_liter", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double gallonUS_to_liter(double gallonUS) {
            object[] results = this.Invoke("gallonUS_to_liter", new object[] {
                        gallonUS});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void gallonUS_to_literAsync(double gallonUS) {
            this.gallonUS_to_literAsync(gallonUS, null);
        }
        
        /// <remarks/>
        public void gallonUS_to_literAsync(double gallonUS, object userState) {
            if ((this.gallonUS_to_literOperationCompleted == null)) {
                this.gallonUS_to_literOperationCompleted = new System.Threading.SendOrPostCallback(this.OngallonUS_to_literOperationCompleted);
            }
            this.InvokeAsync("gallonUS_to_liter", new object[] {
                        gallonUS}, this.gallonUS_to_literOperationCompleted, userState);
        }
        
        private void OngallonUS_to_literOperationCompleted(object arg) {
            if ((this.gallonUS_to_literCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gallonUS_to_literCompleted(this, new gallonUS_to_literCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/meter_to_centimeter", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double meter_to_centimeter(double meter) {
            object[] results = this.Invoke("meter_to_centimeter", new object[] {
                        meter});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void meter_to_centimeterAsync(double meter) {
            this.meter_to_centimeterAsync(meter, null);
        }
        
        /// <remarks/>
        public void meter_to_centimeterAsync(double meter, object userState) {
            if ((this.meter_to_centimeterOperationCompleted == null)) {
                this.meter_to_centimeterOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmeter_to_centimeterOperationCompleted);
            }
            this.InvokeAsync("meter_to_centimeter", new object[] {
                        meter}, this.meter_to_centimeterOperationCompleted, userState);
        }
        
        private void Onmeter_to_centimeterOperationCompleted(object arg) {
            if ((this.meter_to_centimeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.meter_to_centimeterCompleted(this, new meter_to_centimeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/centimeter_to_meter", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double centimeter_to_meter(double cm) {
            object[] results = this.Invoke("centimeter_to_meter", new object[] {
                        cm});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void centimeter_to_meterAsync(double cm) {
            this.centimeter_to_meterAsync(cm, null);
        }
        
        /// <remarks/>
        public void centimeter_to_meterAsync(double cm, object userState) {
            if ((this.centimeter_to_meterOperationCompleted == null)) {
                this.centimeter_to_meterOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncentimeter_to_meterOperationCompleted);
            }
            this.InvokeAsync("centimeter_to_meter", new object[] {
                        cm}, this.centimeter_to_meterOperationCompleted, userState);
        }
        
        private void Oncentimeter_to_meterOperationCompleted(object arg) {
            if ((this.centimeter_to_meterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.centimeter_to_meterCompleted(this, new centimeter_to_meterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/foot_to_inch", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double foot_to_inch(double foot) {
            object[] results = this.Invoke("foot_to_inch", new object[] {
                        foot});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void foot_to_inchAsync(double foot) {
            this.foot_to_inchAsync(foot, null);
        }
        
        /// <remarks/>
        public void foot_to_inchAsync(double foot, object userState) {
            if ((this.foot_to_inchOperationCompleted == null)) {
                this.foot_to_inchOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfoot_to_inchOperationCompleted);
            }
            this.InvokeAsync("foot_to_inch", new object[] {
                        foot}, this.foot_to_inchOperationCompleted, userState);
        }
        
        private void Onfoot_to_inchOperationCompleted(object arg) {
            if ((this.foot_to_inchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.foot_to_inchCompleted(this, new foot_to_inchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/inch_to_foot", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double inch_to_foot(double inch) {
            object[] results = this.Invoke("inch_to_foot", new object[] {
                        inch});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void inch_to_footAsync(double inch) {
            this.inch_to_footAsync(inch, null);
        }
        
        /// <remarks/>
        public void inch_to_footAsync(double inch, object userState) {
            if ((this.inch_to_footOperationCompleted == null)) {
                this.inch_to_footOperationCompleted = new System.Threading.SendOrPostCallback(this.Oninch_to_footOperationCompleted);
            }
            this.InvokeAsync("inch_to_foot", new object[] {
                        inch}, this.inch_to_footOperationCompleted, userState);
        }
        
        private void Oninch_to_footOperationCompleted(object arg) {
            if ((this.inch_to_footCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inch_to_footCompleted(this, new inch_to_footCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/meter_to_foot", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double meter_to_foot(double meter) {
            object[] results = this.Invoke("meter_to_foot", new object[] {
                        meter});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void meter_to_footAsync(double meter) {
            this.meter_to_footAsync(meter, null);
        }
        
        /// <remarks/>
        public void meter_to_footAsync(double meter, object userState) {
            if ((this.meter_to_footOperationCompleted == null)) {
                this.meter_to_footOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmeter_to_footOperationCompleted);
            }
            this.InvokeAsync("meter_to_foot", new object[] {
                        meter}, this.meter_to_footOperationCompleted, userState);
        }
        
        private void Onmeter_to_footOperationCompleted(object arg) {
            if ((this.meter_to_footCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.meter_to_footCompleted(this, new meter_to_footCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://192.168.1.20/aquariasoap/service.php/foot_to_meter", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public double foot_to_meter(double foot) {
            object[] results = this.Invoke("foot_to_meter", new object[] {
                        foot});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void foot_to_meterAsync(double foot) {
            this.foot_to_meterAsync(foot, null);
        }
        
        /// <remarks/>
        public void foot_to_meterAsync(double foot, object userState) {
            if ((this.foot_to_meterOperationCompleted == null)) {
                this.foot_to_meterOperationCompleted = new System.Threading.SendOrPostCallback(this.Onfoot_to_meterOperationCompleted);
            }
            this.InvokeAsync("foot_to_meter", new object[] {
                        foot}, this.foot_to_meterOperationCompleted, userState);
        }
        
        private void Onfoot_to_meterOperationCompleted(object arg) {
            if ((this.foot_to_meterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.foot_to_meterCompleted(this, new foot_to_meterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_angelfish_idCompletedEventHandler(object sender, get_angelfish_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_angelfish_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_angelfish_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_bettafish_idCompletedEventHandler(object sender, get_bettafish_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_bettafish_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_bettafish_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_danio_idCompletedEventHandler(object sender, get_danio_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_danio_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_danio_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_commongoldfish_idCompletedEventHandler(object sender, get_commongoldfish_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_commongoldfish_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_commongoldfish_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_fancygoldfish_idCompletedEventHandler(object sender, get_fancygoldfish_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_fancygoldfish_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_fancygoldfish_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_gourami_idCompletedEventHandler(object sender, get_gourami_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_gourami_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_gourami_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_guppy_idCompletedEventHandler(object sender, get_guppy_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_guppy_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_guppy_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_molly_idCompletedEventHandler(object sender, get_molly_idCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_molly_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_molly_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_fcm_notcompatible_numberCompletedEventHandler(object sender, get_fcm_notcompatible_numberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_fcm_notcompatible_numberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_fcm_notcompatible_numberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_fcm_usuallycompatible_numberCompletedEventHandler(object sender, get_fcm_usuallycompatible_numberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_fcm_usuallycompatible_numberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_fcm_usuallycompatible_numberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_fcm_verycompatible_numberCompletedEventHandler(object sender, get_fcm_verycompatible_numberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_fcm_verycompatible_numberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_fcm_verycompatible_numberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_halfcylinder_nameCompletedEventHandler(object sender, get_halfcylinder_nameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_halfcylinder_nameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_halfcylinder_nameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_quartercylinder_nameCompletedEventHandler(object sender, get_quartercylinder_nameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_quartercylinder_nameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_quartercylinder_nameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_massCompletedEventHandler(object sender, get_massCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_massCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_massCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_rectangle_volumeCompletedEventHandler(object sender, get_rectangle_volumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_rectangle_volumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_rectangle_volumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_bowfront_volumeCompletedEventHandler(object sender, get_bowfront_volumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_bowfront_volumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_bowfront_volumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_triangleprism_volumeCompletedEventHandler(object sender, get_triangleprism_volumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_triangleprism_volumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_triangleprism_volumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_cornerpentagon_volumeCompletedEventHandler(object sender, get_cornerpentagon_volumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_cornerpentagon_volumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_cornerpentagon_volumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_cylinder_volumeCompletedEventHandler(object sender, get_cylinder_volumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_cylinder_volumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_cylinder_volumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void calculate_electricity_costCompletedEventHandler(object sender, calculate_electricity_costCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculate_electricity_costCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculate_electricity_costCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void calculate_monthlyCompletedEventHandler(object sender, calculate_monthlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculate_monthlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculate_monthlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void calculate_annualCompletedEventHandler(object sender, calculate_annualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calculate_annualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal calculate_annualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void get_meralco_rateCompletedEventHandler(object sender, get_meralco_rateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_meralco_rateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_meralco_rateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void compare_fish_compatibilityCompletedEventHandler(object sender, compare_fish_compatibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class compare_fish_compatibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal compare_fish_compatibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void celsius_to_kelvinCompletedEventHandler(object sender, celsius_to_kelvinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class celsius_to_kelvinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal celsius_to_kelvinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void kelvin_to_celsiusCompletedEventHandler(object sender, kelvin_to_celsiusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class kelvin_to_celsiusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal kelvin_to_celsiusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fahrenheit_to_celsiusCompletedEventHandler(object sender, fahrenheit_to_celsiusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fahrenheit_to_celsiusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fahrenheit_to_celsiusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void celsius_to_fahrenheitCompletedEventHandler(object sender, celsius_to_fahrenheitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class celsius_to_fahrenheitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal celsius_to_fahrenheitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fahrenheit_to_kelvinCompletedEventHandler(object sender, fahrenheit_to_kelvinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fahrenheit_to_kelvinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fahrenheit_to_kelvinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void kelvin_to_fahrenheitCompletedEventHandler(object sender, kelvin_to_fahrenheitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class kelvin_to_fahrenheitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal kelvin_to_fahrenheitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cm3_to_literCompletedEventHandler(object sender, cm3_to_literCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cm3_to_literCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cm3_to_literCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void liter_to_cm3CompletedEventHandler(object sender, liter_to_cm3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class liter_to_cm3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal liter_to_cm3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void liter_to_gallonUSCompletedEventHandler(object sender, liter_to_gallonUSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class liter_to_gallonUSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal liter_to_gallonUSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void gallonUS_to_literCompletedEventHandler(object sender, gallonUS_to_literCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gallonUS_to_literCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gallonUS_to_literCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void meter_to_centimeterCompletedEventHandler(object sender, meter_to_centimeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class meter_to_centimeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal meter_to_centimeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void centimeter_to_meterCompletedEventHandler(object sender, centimeter_to_meterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class centimeter_to_meterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal centimeter_to_meterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void foot_to_inchCompletedEventHandler(object sender, foot_to_inchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class foot_to_inchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal foot_to_inchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void inch_to_footCompletedEventHandler(object sender, inch_to_footCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inch_to_footCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inch_to_footCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void meter_to_footCompletedEventHandler(object sender, meter_to_footCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class meter_to_footCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal meter_to_footCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void foot_to_meterCompletedEventHandler(object sender, foot_to_meterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class foot_to_meterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal foot_to_meterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591